# Generated by Django 5.0.3 on 2024-03-29 14:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contacts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IndustrialSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('space_type', models.CharField(choices=[('Producție grea', 'Producție grea'), ('Producție ușoară', 'Producție ușoară'), ('Depozit distribuție', 'Depozit distribuție'), ('Depozit general', 'Depozit general'), ('Cercetare și dezvoltare', 'Cercetare și dezvoltare'), ('Centru de date', 'Centru de date'), ('Showroom', 'Showroom')], verbose_name='Tip spațiu⋆')),
                ('destination', models.CharField(blank=True, choices=[('Producție', 'Producție'), ('Depozitare', 'Depozitare'), ('Prezentare', 'Prezentare')], null=True, verbose_name='Destinație')),
                ('floor', models.CharField(blank=True, choices=[('Demisol', 'Demisol'), ('Parter', 'Parter'), ('Parter înalt', 'Parter înalt'), ('1', '1'), ('2', '2'), ('3', '3'), ('Mansardă', 'Mansardă')], null=True, verbose_name='Etaj')),
                ('space_class', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], null=True, verbose_name='Clasă birouri')),
                ('rooms_number', models.IntegerField(blank=True, null=True, verbose_name='Număr camere')),
                ('nr_locker_rooms', models.IntegerField(blank=True, null=True, verbose_name='Număr vestiare')),
                ('nr_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr băi')),
                ('nr_kitchens', models.IntegerField(blank=True, null=True, verbose_name='Număr bucătării')),
                ('nr_terraces', models.IntegerField(blank=True, null=True, verbose_name='Număr terase')),
                ('useful_surface', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Suprafață utilă (mp)⋆')),
                ('built_area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Suprafață construită (mp)')),
                ('total_surface_offices', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Suprafață totală birouri (mp)')),
                ('space_compart', models.CharField(blank=True, choices=[('Open-space', 'Open-space'), ('Compartimentat', 'Compartimentat'), ('Parțial compartimentat', 'Parțial compartimentat'), ('Flexibil', 'Flexibil')], null=True, verbose_name='Compartimentare')),
                ('glass_case', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Vitrină (m)')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('terrain_surface', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Suprafață teren (mp)⋆')),
                ('production_area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Suprafață producție (mp)')),
                ('storage_area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Suprafață depozitare (mp)')),
                ('entrance_door_dimensions', models.CharField(blank=True, max_length=15, null=True, verbose_name='Dimensiuni uși intrare')),
                ('inside_height', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Înălțime interioară (m)⋆')),
                ('nr_parking_spaces', models.IntegerField(blank=True, null=True, verbose_name='Număr locuri parcare')),
                ('land_facilities', models.CharField(blank=True, choices=[('Apă', 'Apă'), ('Canalizare', 'Canalizare'), ('Curent', 'Curent'), ('Gaz', 'Gaz'), ('Irigații', 'Irigații'), ('Utilități în zonă', 'Utilități în zonă')], null=True, verbose_name='Facilități teren')),
                ('parking', models.CharField(blank=True, choices=[('Garaj', 'Garaj'), ('Garaj subteran', 'Garaj subteran'), ('Parcare acoperită', 'Parcare acoperită'), ('Parcare deschisă', 'Parcare deschisă')], null=True, verbose_name='Parcare')),
                ('other_facilities_ind_sp', models.CharField(blank=True, choices=[('Acces auto', 'Acces auto'), ('Acces camion', 'Acces camion'), ('Construcție demolabilă', 'Construcție demolabilă'), ('Curent trifazic (380V)', 'Curent trifazic (380V)'), ('La șosea', 'La șosea'), ('Luminatoare', 'Luminatoare'), ('Oportunitate de investiții', 'Oportunitate de investiții'), ('Panouri solare', 'Panouri solare'), ('Pod rulant', 'Pod rulant'), ('Posibilitate de compartimentare', 'Posibilitate de compartimentare'), ('Sistem de alarmă', 'Sistem de alarmă'), ('Teren împrejmuit', 'Teren împrejmuit'), ('Uși de acces', 'Uși de acces'), ('Vestiar', 'Vestiar')], null=True, verbose_name='Alte facilități spațiu industrial')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_industrial_space_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfficeBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('construction_status', models.CharField(choices=[('Finalizată', 'Finalizată'), ('La gri', 'La gri'), ('La roșu', 'La roșu'), ('Structură', 'Structură'), ('Proiect', 'Proiect'), ('În construcție', 'În construcție'), ('De demolat', 'De demolat')], verbose_name='Stadiu construcție⋆')),
                ('construction_materials', models.CharField(blank=True, choices=[('Beton', 'Beton'), ('Cărămidă', 'Cărămidă'), ('BCA', 'BCA'), ('Metal', 'Metal'), ('Lemn', 'Lemn'), ('Altele', 'Altele'), ('Cadre', 'Cadre'), ('Plăci', 'Plăci'), ('Monolit', 'Monolit')], null=True, verbose_name='Materiale construcție')),
                ('interior_finishes', models.CharField(choices=[('Finisat modern', 'Finisat modern'), ('Finisat', 'Finisat'), ('Finisat clasic', 'Finisat clasic'), ('Semifinisat', 'Semifinisat'), ('Necesită renovare', 'Necesită renovare'), ('Nefinisat', 'Nefinisat')], verbose_name='Stare interior⋆')),
                ('nr_floors', models.IntegerField(verbose_name='Număr etaje⋆')),
                ('space_class', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], null=True, verbose_name='Clasă')),
                ('minimum_area', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Suprafață minimă (mp)')),
                ('maximum_area', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață maximă (mp)')),
                ('total_surface_offices', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Suprafață totală birouri (mp)⋆')),
                ('common_area_factor', models.IntegerField(blank=True, null=True, verbose_name='Factor suprafețe comune (%)')),
                ('occupancy_rate', models.IntegerField(blank=True, null=True, verbose_name='Rata de ocupare (%)')),
                ('underground_parking', models.BooleanField(default=False, verbose_name='Parcare subterană')),
                ('nr_underground_parking', models.IntegerField(blank=True, null=True, verbose_name='Nr. locuri parcare subterană')),
                ('underground_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare subterană')),
                ('surface_parking', models.BooleanField(default=False, verbose_name='Parcare suprafață')),
                ('nr_surface_parking', models.IntegerField(blank=True, null=True, verbose_name='Nr. locuri parcare suprafață')),
                ('surface_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare suprafață')),
                ('nr_elevators', models.IntegerField(blank=True, null=True, verbose_name='Număr lifturi')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('mezzanine', models.BooleanField(default=False, verbose_name='Mezanin')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('finishes', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Finisaje imobil')),
                ('technical_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Detalii tehnice')),
                ('services_provided', models.CharField(blank=True, choices=[('Acces persoane cu dizabilități', 'Acces persoane cu dizabilități'), ('Administrare și management imobiliar', 'Administrare și management imobiliar'), ('Afișare logo pe clădire', 'Afișare logo pe clădire'), ('Consumabile grupuri sociale', 'Consumabile grupuri sociale'), ('Contorizare separată', 'Contorizare separată'), ('Curățenie exterioară', 'Curățenie exterioară'), ('Curățenie parcare', 'Curățenie parcare'), ('Curățenie spații comune', 'Curățenie spații comune'), ('Îndepărtarea zăpezii', 'Îndepărtarea zăpezii'), ('Îngrijirea spațiilor verzi', 'Îngrijirea spațiilor verzi'), ('Salubritate', 'Salubritate'), ('Servicii de întreținere și reparații lifturi', 'Servicii de întreținere și reparații lifturi'), ('Sistem de ventilație', 'Sistem de ventilație'), ('Vestiar', 'Vestiar')], null=True, verbose_name='Servicii asigurate')),
                ('safety_security', models.CharField(blank=True, choices=[('Acces securizat parcare', 'Acces securizat parcare'), ('Cameră server', 'Cameră server'), ('CCTV', 'CCTV'), ('Control acces securizat pe bază de cartele', 'Control acces securizat pe bază de cartele'), ('Control al accesului pe zone', 'Control al accesului pe zone'), ('Detectoare de fum / incendiu', 'Detectoare de fum / incendiu'), ('Extinctoare sprinkler', 'Extinctoare sprinkler'), ('Pază permanentă', 'Pază permanentă'), ('Recepție', 'Recepție'), ('Semaforizare parcare', 'Semaforizare parcare'), ('Server room cu rack, ventilație, control acces', 'Server room cu rack, ventilație, control acces'), ('Sistem de alarmă', 'Sistem de alarmă'), ('Sistem de evacuare', 'Sistem de evacuare'), ('Sisteme de securitate integrate BMS', 'Sisteme de securitate integrate BMS')], null=True, verbose_name='Siguranță și securitate')),
                ('it_c', models.CharField(blank=True, choices=[('Internet', 'Internet'), ('Posibilitatea alegerii operator date', 'Posibilitatea alegerii operator date'), ('Posibilitatea alegerii operator telefonie', 'Posibilitatea alegerii operator telefonie'), ('Sistem modern de telecomunicații', 'Sistem modern de telecomunicații'), ('Telefon', 'Telefon')], null=True, verbose_name='IT & C')),
                ('electrical_system', models.CharField(blank=True, choices=[('Control electric individual pe zona de birou', 'Control electric individual pe zona de birou'), ('Generator de urgență', 'Generator de urgență'), ('Necesită surse suplimentare de energie', 'Necesită surse suplimentare de energie'), ('Sursă principală de alimentare', 'Sursă principală de alimentare'), ('Sursa UPS', 'Sursa UPS')], null=True, verbose_name='Sistem electric')),
                ('eco_elements', models.CharField(blank=True, choices=[('Building management system', 'Building management system'), ('Certificare Green Building', 'Certificare Green Building'), ('Echipamente moderne / silențioase', 'Echipamente moderne / silențioase'), ('Fațadă ventilată', 'Fațadă ventilată'), ('Incărcător auto electrice', 'Incărcător auto electrice'), ('Panouri solare', 'Panouri solare'), ('Parcare biciclete', 'Parcare biciclete'), ('Sistem electric inteligent', 'Sistem electric inteligent'), ('Sistem inteligent ascensoare', 'Sistem inteligent ascensoare')], null=True, verbose_name='Elemente ECO')),
                ('architecture', models.CharField(blank=True, choices=[('Cortină de sticlă', 'Cortină de sticlă'), ('Ferestre care se deschid', 'Ferestre care se deschid'), ('Ferestre înclinate', 'Ferestre înclinate'), ('Gresie', 'Gresie'), ('Grupuri sanitare amenajate și utilate', 'Grupuri sanitare amenajate și utilate'), ('Lift cu destinație programată', 'Lift cu destinație programată'), ('Mochetă', 'Mochetă'), ('Parchet', 'Parchet'), ('Podea înălțată', 'Podea înălțată'), ('Post trafo', 'Post trafo'), ('Tavan fals', 'Tavan fals')], null=True, verbose_name='Arhitectură')),
                ('air_conditioning', models.CharField(blank=True, choices=[('Aport de aer proaspăt', 'Aport de aer proaspăt'), ('Centrală termică', 'Centrală termică'), ('Control individual AC pentru fiecare zonă de birou', 'Control individual AC pentru fiecare zonă de birou'), ('Sistem climatizare 2 țevi', 'Sistem climatizare 2 țevi'), ('Sistem climatizare 4 țevi', 'Sistem climatizare 4 țevi'), ('Unități Split', 'Unități Split'), ('Ventilație mecanică', 'Ventilație mecanică')], null=True, verbose_name='Climatizare birou')),
                ('building_facilities_proximity', models.CharField(blank=True, choices=[('Stație de autobuz în apropiere', 'Stație de autobuz în apropiere'), ('Cafenea la parter', 'Cafenea la parter'), ('Centru comercial în apropiere', 'Centru comercial în apropiere'), ('Restaurant în clădire', 'Restaurant în clădire'), ('Stație de metrou în apropiere', 'Stație de metrou în apropiere'), ('Stație de tramvai în apropiere', 'Stație de tramvai în apropiere')], null=True, verbose_name='Facilități clădire / proximități')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
            ],
        ),
        migrations.CreateModel(
            name='OfficeSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('space_nr', models.IntegerField(verbose_name='Număr spațiu⋆')),
                ('space_type', models.CharField(choices=[('Bloc de apartamente', 'Bloc de apartamente'), ('Clădire birouri', 'Clădire birouri'), ('Casă / Vilă', 'Casă / Vilă'), ('Centru comercial', 'Centru comercial'), ('Hală / Depozit', 'Hală / Depozit'), ('Stradal', 'Stradal')], verbose_name='Tip imobil⋆')),
                ('floor', models.CharField(choices=[('Demisol', 'Demisol'), ('Parter', 'Parter'), ('Parter înalt', 'Parter înalt'), ('Mezanin', 'Mezanin'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('Mansardă', 'Mansardă'), ('Ultimele 2 etaje', 'Ultimele 2 etaje')], verbose_name='Etaj⋆')),
                ('space_class', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], null=True, verbose_name='Clasă')),
                ('rooms_number', models.IntegerField(blank=True, null=True, verbose_name='Număr camere')),
                ('nr_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr băi')),
                ('useful_surface', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Suprafață utilă (mp)⋆')),
                ('total_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Suprafață totală (mp)')),
                ('nr_terraces', models.IntegerField(blank=True, null=True, verbose_name='Număr terase')),
                ('minimum_area', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Suprafață minimă (mp)')),
                ('maximum_area', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață maximă (mp)')),
                ('total_surface_offices', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Suprafață totală birouri (mp)⋆')),
                ('common_area_factor', models.IntegerField(blank=True, null=True, verbose_name='Factor suprafețe comune (%)')),
                ('occupancy_rate', models.IntegerField(blank=True, null=True, verbose_name='Rata de ocupare (%)')),
                ('space_compart', models.CharField(blank=True, choices=[('Open-space', 'Open-space'), ('Compartimentat', 'Compartimentat'), ('Parțial compartimentat', 'Parțial compartimentat'), ('Flexibil', 'Flexibil')], null=True, verbose_name='Compartimentare')),
                ('underground_parking', models.BooleanField(default=False, verbose_name='Parcare subterană')),
                ('underground_parking_available', models.IntegerField(blank=True, null=True, verbose_name='Parcări subterane disponibile')),
                ('underground_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare subterană')),
                ('surface_parking', models.BooleanField(default=False, verbose_name='Parcare suprafață')),
                ('surface_parking_available', models.IntegerField(blank=True, null=True, verbose_name='Parcări suprafață disponibile')),
                ('surface_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare suprafață')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('nr_floors', models.IntegerField(verbose_name='Număr etaje⋆')),
                ('nr_elevators', models.IntegerField(blank=True, null=True, verbose_name='Număr lifturi')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('services_provided', models.CharField(blank=True, choices=[('Acces persoane cu dizabilități', 'Acces persoane cu dizabilități'), ('Administrare și management imobiliar', 'Administrare și management imobiliar'), ('Afișare logo pe clădire', 'Afișare logo pe clădire'), ('Consumabile grupuri sociale', 'Consumabile grupuri sociale'), ('Contorizare separată', 'Contorizare separată'), ('Curățenie exterioară', 'Curățenie exterioară'), ('Curățenie parcare', 'Curățenie parcare'), ('Curățenie spații comune', 'Curățenie spații comune'), ('Îndepărtarea zăpezii', 'Îndepărtarea zăpezii'), ('Îngrijirea spațiilor verzi', 'Îngrijirea spațiilor verzi'), ('Salubritate', 'Salubritate'), ('Servicii de întreținere și reparații lifturi', 'Servicii de întreținere și reparații lifturi'), ('Sistem de ventilație', 'Sistem de ventilație'), ('Vestiar', 'Vestiar')], null=True, verbose_name='Servicii asigurate')),
                ('safety_security', models.CharField(blank=True, choices=[('Acces securizat parcare', 'Acces securizat parcare'), ('Cameră server', 'Cameră server'), ('CCTV', 'CCTV'), ('Control acces securizat pe bază de cartele', 'Control acces securizat pe bază de cartele'), ('Control al accesului pe zone', 'Control al accesului pe zone'), ('Detectoare de fum / incendiu', 'Detectoare de fum / incendiu'), ('Extinctoare sprinkler', 'Extinctoare sprinkler'), ('Pază permanentă', 'Pază permanentă'), ('Recepție', 'Recepție'), ('Semaforizare parcare', 'Semaforizare parcare'), ('Server room cu rack, ventilație, control acces', 'Server room cu rack, ventilație, control acces'), ('Sistem de alarmă', 'Sistem de alarmă'), ('Sistem de evacuare', 'Sistem de evacuare'), ('Sisteme de securitate integrate BMS', 'Sisteme de securitate integrate BMS')], null=True, verbose_name='Siguranță și securitate')),
                ('it_c', models.CharField(blank=True, choices=[('Internet', 'Internet'), ('Posibilitatea alegerii operator date', 'Posibilitatea alegerii operator date'), ('Posibilitatea alegerii operator telefonie', 'Posibilitatea alegerii operator telefonie'), ('Sistem modern de telecomunicații', 'Sistem modern de telecomunicații'), ('Telefon', 'Telefon')], null=True, verbose_name='IT & C')),
                ('electrical_system', models.CharField(blank=True, choices=[('Control electric individual pe zona de birou', 'Control electric individual pe zona de birou'), ('Generator de urgență', 'Generator de urgență'), ('Necesită surse suplimentare de energie', 'Necesită surse suplimentare de energie'), ('Sursă principală de alimentare', 'Sursă principală de alimentare'), ('Sursa UPS', 'Sursa UPS')], null=True, verbose_name='Sistem electric')),
                ('eco_elements', models.CharField(blank=True, choices=[('Building management system', 'Building management system'), ('Certificare Green Building', 'Certificare Green Building'), ('Echipamente moderne / silențioase', 'Echipamente moderne / silențioase'), ('Fațadă ventilată', 'Fațadă ventilată'), ('Incărcător auto electrice', 'Incărcător auto electrice'), ('Panouri solare', 'Panouri solare'), ('Parcare biciclete', 'Parcare biciclete'), ('Sistem electric inteligent', 'Sistem electric inteligent'), ('Sistem inteligent ascensoare', 'Sistem inteligent ascensoare')], null=True, verbose_name='Elemente ECO')),
                ('architecture', models.CharField(blank=True, choices=[('Cortină de sticlă', 'Cortină de sticlă'), ('Ferestre care se deschid', 'Ferestre care se deschid'), ('Ferestre înclinate', 'Ferestre înclinate'), ('Gresie', 'Gresie'), ('Grupuri sanitare amenajate și utilate', 'Grupuri sanitare amenajate și utilate'), ('Lift cu destinație programată', 'Lift cu destinație programată'), ('Mochetă', 'Mochetă'), ('Parchet', 'Parchet'), ('Podea înălțată', 'Podea înălțată'), ('Post trafo', 'Post trafo'), ('Tavan fals', 'Tavan fals')], null=True, verbose_name='Arhitectură')),
                ('air_conditioning', models.CharField(blank=True, choices=[('Aport de aer proaspăt', 'Aport de aer proaspăt'), ('Centrală termică', 'Centrală termică'), ('Control individual AC pentru fiecare zonă de birou', 'Control individual AC pentru fiecare zonă de birou'), ('Sistem climatizare 2 țevi', 'Sistem climatizare 2 țevi'), ('Sistem climatizare 4 țevi', 'Sistem climatizare 4 țevi'), ('Unități Split', 'Unități Split'), ('Ventilație mecanică', 'Ventilație mecanică')], null=True, verbose_name='Climatizare birou')),
                ('building_facilities_proximity', models.CharField(blank=True, choices=[('Stație de autobuz în apropiere', 'Stație de autobuz în apropiere'), ('Cafenea la parter', 'Cafenea la parter'), ('Centru comercial în apropiere', 'Centru comercial în apropiere'), ('Restaurant în clădire', 'Restaurant în clădire'), ('Stație de metrou în apropiere', 'Stație de metrou în apropiere'), ('Stație de tramvai în apropiere', 'Stație de tramvai în apropiere')], null=True, verbose_name='Facilități clădire / proximități')),
                ('parking', models.CharField(blank=True, choices=[('Garaj', 'Garaj'), ('Garaj subteran', 'Garaj subteran'), ('Parcare acoperită', 'Parcare acoperită'), ('Parcare deschisă', 'Parcare deschisă')], null=True, verbose_name='Parcare')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_office_space_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
                ('office_building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.officebuilding', verbose_name='Clădire de birouri')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResidentialEnsemble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('building_type', models.CharField(choices=[('Bloc de apartamente', 'Bloc de apartamente'), ('Bloc de garsoniere', 'Bloc de garsoniere'), ('Bloc mixt', 'Bloc mixt'), ('Vilă de apartamente', 'Vilă de apartamente'), ('Case / Vile', 'Case / Vile')], verbose_name='Tip imobil⋆')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('construction_status', models.CharField(choices=[('Finalizată', 'Finalizată'), ('La gri', 'La gri'), ('La roșu', 'La roșu'), ('Structură', 'Structură'), ('Proiect', 'Proiect'), ('În construcție', 'În construcție'), ('De demolat', 'De demolat')], verbose_name='Stadiu construcție⋆')),
                ('construction_materials', models.CharField(blank=True, choices=[('Beton', 'Beton'), ('Cărămidă', 'Cărămidă'), ('BCA', 'BCA'), ('Metal', 'Metal'), ('Lemn', 'Lemn'), ('Altele', 'Altele'), ('Cadre', 'Cadre'), ('Plăci', 'Plăci'), ('Monolit', 'Monolit')], null=True, verbose_name='Materiale construcție')),
                ('interior_finishes', models.CharField(choices=[('Finisat modern', 'Finisat modern'), ('Finisat', 'Finisat'), ('Finisat clasic', 'Finisat clasic'), ('Semifinisat', 'Semifinisat'), ('Necesită renovare', 'Necesită renovare'), ('Nefinisat', 'Nefinisat')], verbose_name='Stare interior⋆')),
                ('nr_floors', models.IntegerField(verbose_name='Număr etaje⋆')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('attic', models.BooleanField(default=False, verbose_name='Pod')),
                ('underground_parking', models.BooleanField(default=False, verbose_name='Parcare subterană')),
                ('nr_underground_parking', models.IntegerField(blank=True, null=True, verbose_name='Nr. locuri parcare subterană')),
                ('underground_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare subterană')),
                ('surface_parking', models.BooleanField(default=False, verbose_name='Parcare suprafață')),
                ('nr_surface_parking', models.IntegerField(blank=True, null=True, verbose_name='Nr. locuri parcare suprafață')),
                ('surface_parking_cost', models.IntegerField(blank=True, null=True, verbose_name='Cost loc parcare suprafață')),
                ('finishes', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Finisaje imobil')),
                ('technical_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Detalii tehnice')),
                ('thermal_insulation', models.CharField(blank=True, choices=[('Izolație exterioară', 'Izolație exterioară'), ('Izolație interioară', 'Izolație interioară')], null=True, verbose_name='Izolație termică')),
                ('other_spaces', models.CharField(blank=True, choices=[('Grădină proprie', 'Grădină proprie'), ('Boxă la subsol', 'Boxă la subsol'), ('Curte', 'Curte'), ('Curte comună', 'Curte comună'), ('Debara', 'Debara'), ('Lift', 'Lift'), ('Loc de joacă copii', 'Loc de joacă copii'), ('Magazie', 'Magazie'), ('Pivniță', 'Pivniță'), ('Zonă barbeque', 'Zonă barbeque')], null=True, verbose_name='Alte spații')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('house_type', models.CharField(choices=[('Individuală', 'Individuală'), ('Vilă', 'Vilă'), ('Calcan', 'Calcan'), ('Duplex', 'Duplex'), ('Triplex', 'Triplex'), ('Înșiruită', 'Înșiruită')], verbose_name='Tip casă⋆')),
                ('destination', models.CharField(blank=True, choices=[('Rezidențială', 'Rezidențială'), ('Comercială', 'Comercială'), ('Birouri', 'Birouri')], null=True, verbose_name='Destinație')),
                ('interior_finishes', models.CharField(choices=[('Finisat modern', 'Finisat modern'), ('Finisat', 'Finisat'), ('Finisat clasic', 'Finisat clasic'), ('Semifinisat', 'Semifinisat'), ('Necesită renovare', 'Necesită renovare'), ('Nefinisat', 'Nefinisat')], verbose_name='Stare interior⋆')),
                ('useful_surface', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Suprafață utilă (mp)⋆')),
                ('built_area', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață construită (mp)')),
                ('terrain_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Suprafață utilă teren (mp)')),
                ('terrain_total_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Suprafață totală teren (mp)')),
                ('terrace_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață terasă (mp)')),
                ('balcony_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Suprafață balcoane (mp)')),
                ('opening', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Deschidere (m)')),
                ('roof', models.CharField(blank=True, choices=[('Tablă', 'Tablă'), ('Țiglă', 'Țiglă'), ('Șindrilă', 'Șindrilă'), ('Terasă', 'Terasă')], null=True, verbose_name='Acoperiș')),
                ('construction_status', models.CharField(blank=True, choices=[('Finalizată', 'Finalizată'), ('La gri', 'La gri'), ('La roșu', 'La roșu'), ('Structură', 'Structură'), ('Proiect', 'Proiect'), ('În construcție', 'În construcție'), ('De demolat', 'De demolat')], null=True, verbose_name='Stadiu construcție')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('construction_materials', models.CharField(blank=True, choices=[('Beton', 'Beton'), ('Cărămidă', 'Cărămidă'), ('BCA', 'BCA'), ('Metal', 'Metal'), ('Lemn', 'Lemn'), ('Altele', 'Altele'), ('Cadre', 'Cadre'), ('Plăci', 'Plăci'), ('Monolit', 'Monolit')], null=True, verbose_name='Materiale construcție')),
                ('nr_floors', models.IntegerField(blank=True, null=True, verbose_name='Număr etaje')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('attic', models.BooleanField(default=False, verbose_name='Pod')),
                ('rooms_number', models.IntegerField(verbose_name='Număr camere⋆')),
                ('nr_bedrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr dormitoare')),
                ('nr_kitchens', models.IntegerField(blank=True, null=True, verbose_name='Număr bucătării')),
                ('nr_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr băi')),
                ('bathroom_window', models.BooleanField(default=False, verbose_name='Geam la baie')),
                ('nr_terraces', models.IntegerField(blank=True, null=True, verbose_name='Număr terase')),
                ('nr_balconies', models.IntegerField(blank=True, null=True, verbose_name='Număr balcoane')),
                ('garage', models.BooleanField(default=False, verbose_name='Garaj')),
                ('nr_parking_spaces', models.IntegerField(blank=True, null=True, verbose_name='Număr locuri parcare')),
                ('facilities', models.CharField(blank=True, choices=[('Aer condiționat', 'Aer condiționat'), ('Aeroterme', 'Aeroterme'), ('Dressing', 'Dressing'), ('Jacuzzi', 'Jacuzzi'), ('Scară interioară', 'Scară interioară'), ('Șemineu', 'Șemineu'), ('Sistem de alarmă', 'Sistem de alarmă')], null=True, verbose_name='Dotări')),
                ('thermal_insulation', models.CharField(blank=True, choices=[('Izolație exterioară', 'Izolație exterioară'), ('Izolație interioară', 'Izolație interioară')], null=True, verbose_name='Izolație termică')),
                ('building_facilities', models.CharField(blank=True, choices=[('Acces persoane cu dizabilități', 'Acces persoane cu dizabilități'), ('Acoperiș', 'Acoperiș'), ('Interfon', 'Interfon'), ('Parcare biciclete', 'Parcare biciclete'), ('Pază', 'Pază'), ('Piscină', 'Piscină'), ('Spălătorie', 'Spălătorie'), ('Spații agrement', 'Spații agrement'), ('Supraveghere video', 'Supraveghere video'), ('Telecomandă poartă acces auto', 'Telecomandă poartă acces auto'), ('Telecomandă poartă garaj', 'Telecomandă poartă garaj'), ('Uscătorie', 'Uscătorie'), ('Videointerfon', 'Videointerfon')], null=True, verbose_name='Dotări imobil')),
                ('parking', models.CharField(blank=True, choices=[('Garaj', 'Garaj'), ('Garaj subteran', 'Garaj subteran'), ('Parcare acoperită', 'Parcare acoperită'), ('Parcare deschisă', 'Parcare deschisă')], null=True, verbose_name='Parcare')),
                ('heating_system', models.CharField(blank=True, choices=[('Calorifere', 'Calorifere'), ('Centrală cu lemne', 'Centrală cu lemne'), ('Centrală cu peleți', 'Centrală cu peleți'), ('Centrală imobil', 'Centrală imobil'), ('Centrală proprie', 'Centrală proprie'), ('Încălzire diesel', 'Încălzire diesel'), ('Încălzire în pardoseală', 'Încălzire în pardoseală'), ('Pompă de căldură', 'Pompă de căldură'), ('Sobă / Teracotă', 'Sobă / Teracotă'), ('Termoficare', 'Termoficare'), ('Ventiloconvectoare', 'Ventiloconvectoare')], null=True, verbose_name='Sistem încălzire')),
                ('entrance_door', models.CharField(blank=True, choices=[('Ușă intrare lemn', 'Ușă intrare lemn'), ('Ușă intrare metal', 'Ușă intrare metal'), ('Ușă intrare pal', 'Ușă intrare pal'), ('Ușă intrare PVC', 'Ușă intrare PVC')], null=True, verbose_name='Ușă intrare')),
                ('interior_doors', models.CharField(blank=True, choices=[('Uși interior celulare', 'Uși interior celulare'), ('Uși interior lemn', 'Uși interior lemn'), ('Uși interior MDF', 'Uși interior MDF'), ('Uși interior cu panel', 'Uși interior cu panel'), ('Uși interior PVC', 'Uși interior PVC'), ('Uși interior sticlă', 'Uși interior sticlă')], null=True, verbose_name='Uși interior')),
                ('furniture', models.CharField(blank=True, choices=[('Mobilat complet', 'Mobilat complet'), ('Mobilat lux', 'Mobilat lux'), ('Mobilat parțial', 'Mobilat parțial'), ('Nemobilat', 'Nemobilat')], null=True, verbose_name='Mobilier')),
                ('kitchen', models.CharField(blank=True, choices=[('Bucătărie deschisă', 'Bucătărie deschisă'), ('Bucătărie închisă', 'Bucătărie închisă'), ('Bucătărie mobilată', 'Bucătărie mobilată'), ('Bucătărie parțial mobilată', 'Bucătărie parțial mobilată'), ('Bucătărie parțial utilată', 'Bucătărie parțial utilată'), ('Bucătărie utilată', 'Bucătărie utilată'), ('Chicinetă', 'Chicinetă')], null=True, verbose_name='Bucătărie')),
                ('windows', models.CharField(blank=True, choices=[('Ferestre aluminiu', 'Ferestre aluminiu'), ('Ferestre lemn', 'Ferestre lemn'), ('Ferestre PVC', 'Ferestre PVC'), ('Geamuri cu izolație fonică', 'Geamuri cu izolație fonică'), ('Geamuri cu protecție UV', 'Geamuri cu protecție UV'), ('Geamuri termopan', 'Geamuri termopan'), ('Geamuri tripan', 'Geamuri tripan')], null=True, verbose_name='Ferestre')),
                ('other_spaces', models.CharField(blank=True, choices=[('Grădină proprie', 'Grădină proprie'), ('Boxă la subsol', 'Boxă la subsol'), ('Curte', 'Curte'), ('Curte comună', 'Curte comună'), ('Debara', 'Debara'), ('Lift', 'Lift'), ('Loc de joacă copii', 'Loc de joacă copii'), ('Magazie', 'Magazie'), ('Pivniță', 'Pivniță'), ('Zonă barbeque', 'Zonă barbeque')], null=True, verbose_name='Alte spații')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_house_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
                ('residential_ensemble', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.residentialensemble', verbose_name='Ansamblu rezidențial')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('block', models.CharField(blank=True, max_length=4, null=True, verbose_name='Bloc')),
                ('space_nr', models.IntegerField(verbose_name='Număr spațiu⋆')),
                ('space_type', models.CharField(choices=[('Bloc de apartamente', 'Bloc de apartamente'), ('Clădire birouri', 'Clădire birouri'), ('Casă / Vilă', 'Casă / Vilă'), ('Centru comercial', 'Centru comercial'), ('Hală / Depozit', 'Hală / Depozit'), ('Stradal', 'Stradal')], verbose_name='Tip imobil⋆')),
                ('destination', models.CharField(blank=True, choices=[('Comercială', 'Comercială'), ('Birouri', 'Birouri'), ('Horeca / Retail', 'Horeca / Retail'), ('Magazin prezentare', 'Magazin prezentare'), ('Showroom', 'Showroom'), ('Bancă', 'Bancă'), ('Farmacie', 'Farmacie')], null=True, verbose_name='Destinație')),
                ('pedestrian_traffic', models.CharField(blank=True, choices=[('Intens', 'Intens'), ('Moderat', 'Moderat'), ('Fără trafic pietonal', 'Fără trafic pietonal')], null=True, verbose_name='Trafic pietonal')),
                ('floor', models.CharField(choices=[('Demisol', 'Demisol'), ('Parter', 'Parter'), ('Parter înalt', 'Parter înalt'), ('Mezanin', 'Mezanin'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('Mansardă', 'Mansardă'), ('Ultimele 2 etaje', 'Ultimele 2 etaje')], verbose_name='Etaj⋆')),
                ('rooms_number', models.IntegerField(blank=True, null=True, verbose_name='Număr camere')),
                ('nr_locker_rooms', models.IntegerField(blank=True, null=True, verbose_name='Număr vestiare')),
                ('nr_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr băi')),
                ('nr_kitchens', models.IntegerField(blank=True, null=True, verbose_name='Număr bucătării')),
                ('nr_terraces', models.IntegerField(blank=True, null=True, verbose_name='Număr terase')),
                ('useful_surface', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Suprafață utilă (mp)⋆')),
                ('total_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață totală (mp)')),
                ('street_front', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Front stradal (m)')),
                ('glass_case', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Vitrină (m)')),
                ('inside_height', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Înălțime interioară (m)')),
                ('space_compart', models.CharField(blank=True, choices=[('Open-space', 'Open-space'), ('Compartimentat', 'Compartimentat'), ('Parțial compartimentat', 'Parțial compartimentat'), ('Flexibil', 'Flexibil')], null=True, verbose_name='Compartimentare')),
                ('nr_parking_spaces', models.IntegerField(blank=True, null=True, verbose_name='Număr locuri parcare')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('nr_floors', models.IntegerField(verbose_name='Număr etaje⋆')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('land_facilities', models.CharField(blank=True, choices=[('Apă', 'Apă'), ('Canalizare', 'Canalizare'), ('Curent', 'Curent'), ('Gaz', 'Gaz'), ('Irigații', 'Irigații'), ('Utilități în zonă', 'Utilități în zonă')], null=True, verbose_name='Facilități teren')),
                ('eco_elements', models.CharField(blank=True, choices=[('Building management system', 'Building management system'), ('Certificare Green Building', 'Certificare Green Building'), ('Echipamente moderne / silențioase', 'Echipamente moderne / silențioase'), ('Fațadă ventilată', 'Fațadă ventilată'), ('Incărcător auto electrice', 'Incărcător auto electrice'), ('Panouri solare', 'Panouri solare'), ('Parcare biciclete', 'Parcare biciclete'), ('Sistem electric inteligent', 'Sistem electric inteligent'), ('Sistem inteligent ascensoare', 'Sistem inteligent ascensoare')], null=True, verbose_name='Elemente ECO')),
                ('parking', models.CharField(blank=True, choices=[('Garaj', 'Garaj'), ('Garaj subteran', 'Garaj subteran'), ('Parcare acoperită', 'Parcare acoperită'), ('Parcare deschisă', 'Parcare deschisă')], null=True, verbose_name='Parcare')),
                ('other_facilities_com_sp', models.CharField(blank=True, choices=[('Acces persoane cu dizabilități', 'Acces persoane cu dizabilități'), ('Acces secundar marfă', 'Acces secundar marfă'), ('Afișare logo pe clădire', 'Afișare logo pe clădire'), ('Centrală termică', 'Centrală termică'), ('Contorizare separată', 'Contorizare separată'), ('Grupuri sanitare amenajate și utilate', 'Grupuri sanitare amenajate și utilate'), ('Posibilitate terasă', 'Posibilitate terasă'), ('Sistem de alarmă', 'Sistem de alarmă'), ('Sistem de ventilație', 'Sistem de ventilație'), ('Vestiar', 'Vestiar')], null=True, verbose_name='Alte facilități')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_commercial_space_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
                ('office_building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.officebuilding', verbose_name='Clădire de birouri')),
                ('residential_ensemble', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.residentialensemble', verbose_name='Ansamblu rezidențial')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('block', models.CharField(blank=True, max_length=4, null=True, verbose_name='Bloc')),
                ('scale', models.CharField(blank=True, max_length=3, null=True, verbose_name='Scară')),
                ('apartment_nr', models.IntegerField(verbose_name='Număr apartament⋆')),
                ('apartment_type', models.CharField(choices=[('Apartament', 'Apartament'), ('Garsonieră', 'Garsonieră'), ('Penthouse', 'Penthouse')], verbose_name='Tip apartament⋆')),
                ('destination', models.CharField(blank=True, choices=[('Rezidențială', 'Rezidențială'), ('Comercială', 'Comercială'), ('Birouri', 'Birouri')], null=True, verbose_name='Destinație')),
                ('ap_compart', models.CharField(choices=[('Decomandat', 'Decomandat'), ('Semidecomandat', 'Semidecomandat'), ('Nedecomandat', 'Nedecomandat'), ('Circular', 'Circular'), ('Vagon', 'Vagon')], verbose_name='Compartimentare⋆')),
                ('orientation', models.CharField(blank=True, choices=[('Nord', 'Nord'), ('Sud', 'Sud'), ('Vest', 'Vest'), ('Est', 'Est'), ('Nord-Vest', 'Nord-Vest'), ('Nord-Est', 'Nord-Est'), ('Sud-Vest', 'Sud-Vest'), ('Sud-Est', 'Sud-Est'), ('Nord-Sud', 'Nord-Sud'), ('Vest-Est', 'Vest-Est')], null=True, verbose_name='Orientare')),
                ('floor', models.CharField(choices=[('Demisol', 'Demisol'), ('Parter', 'Parter'), ('Parter înalt', 'Parter înalt'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('Mansardă', 'Mansardă'), ('Ultimele 2 etaje', 'Ultimele 2 etaje')], verbose_name='Etaj⋆')),
                ('comfort', models.CharField(blank=True, choices=[('Lux', 'Lux'), ('1', '1'), ('2', '2'), ('3', '3')], null=True, verbose_name='Confort')),
                ('interior_finishes', models.CharField(choices=[('Finisat modern', 'Finisat modern'), ('Finisat', 'Finisat'), ('Finisat clasic', 'Finisat clasic'), ('Semifinisat', 'Semifinisat'), ('Necesită renovare', 'Necesită renovare'), ('Nefinisat', 'Nefinisat')], verbose_name='Stare interior⋆')),
                ('useful_surface', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Suprafață utilă (mp)⋆')),
                ('total_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață totală (mp)')),
                ('balcony_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Suprafață balcoane (mp)')),
                ('terrace_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață terasă (mp)')),
                ('rooms_number', models.IntegerField(verbose_name='Număr camere⋆')),
                ('nr_bedrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr dormitoare')),
                ('nr_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Număr băi')),
                ('bathroom_window', models.BooleanField(default=False, verbose_name='Geam la baie')),
                ('nr_balconies', models.IntegerField(blank=True, null=True, verbose_name='Număr balcoane')),
                ('nr_terraces', models.IntegerField(blank=True, null=True, verbose_name='Număr terase')),
                ('garage', models.BooleanField(default=False, verbose_name='Garaj')),
                ('nr_parking_spaces', models.IntegerField(blank=True, null=True, verbose_name='Număr locuri parcare')),
                ('building_type', models.CharField(blank=True, choices=[('Bloc de apartamente', 'Bloc de apartamente'), ('Bloc de garsoniere', 'Bloc de garsoniere'), ('Bloc mixt', 'Bloc mixt'), ('Vilă de apartamente', 'Vilă de apartamente')], null=True, verbose_name='Tip imobil')),
                ('construction_year', models.IntegerField(verbose_name='Anul construcției⋆')),
                ('construction_materials', models.CharField(blank=True, choices=[('Beton', 'Beton'), ('Cărămidă', 'Cărămidă'), ('BCA', 'BCA'), ('Metal', 'Metal'), ('Lemn', 'Lemn'), ('Altele', 'Altele'), ('Cadre', 'Cadre'), ('Plăci', 'Plăci'), ('Monolit', 'Monolit')], null=True, verbose_name='Materiale construcție')),
                ('construction_status', models.CharField(blank=True, choices=[('Finalizată', 'Finalizată'), ('La gri', 'La gri'), ('La roșu', 'La roșu'), ('Structură', 'Structură'), ('Proiect', 'Proiect'), ('În construcție', 'În construcție'), ('De demolat', 'De demolat')], null=True, verbose_name='Stadiu construcție')),
                ('nr_floors', models.IntegerField(verbose_name='Număr etaje⋆')),
                ('semi_basement', models.BooleanField(default=False, verbose_name='Demisol')),
                ('technical_floor', models.BooleanField(default=False, verbose_name='Etaj tehnic')),
                ('loft', models.BooleanField(default=False, verbose_name='Mansardă')),
                ('attic', models.BooleanField(default=False, verbose_name='Pod')),
                ('facilities', models.CharField(blank=True, choices=[('Aer condiționat', 'Aer condiționat'), ('Aeroterme', 'Aeroterme'), ('Dressing', 'Dressing'), ('Jacuzzi', 'Jacuzzi'), ('Scară interioară', 'Scară interioară'), ('Șemineu', 'Șemineu'), ('Sistem de alarmă', 'Sistem de alarmă')], null=True, verbose_name='Dotări')),
                ('thermal_insulation', models.CharField(blank=True, choices=[('Izolație exterioară', 'Izolație exterioară'), ('Izolație interioară', 'Izolație interioară')], null=True, verbose_name='Izolație termică')),
                ('building_facilities', models.CharField(blank=True, choices=[('Acces persoane cu dizabilități', 'Acces persoane cu dizabilități'), ('Acoperiș', 'Acoperiș'), ('Interfon', 'Interfon'), ('Parcare biciclete', 'Parcare biciclete'), ('Pază', 'Pază'), ('Piscină', 'Piscină'), ('Spălătorie', 'Spălătorie'), ('Spații agrement', 'Spații agrement'), ('Supraveghere video', 'Supraveghere video'), ('Telecomandă poartă acces auto', 'Telecomandă poartă acces auto'), ('Telecomandă poartă garaj', 'Telecomandă poartă garaj'), ('Uscătorie', 'Uscătorie'), ('Videointerfon', 'Videointerfon')], null=True, verbose_name='Dotări imobil')),
                ('parking', models.CharField(blank=True, choices=[('Garaj', 'Garaj'), ('Garaj subteran', 'Garaj subteran'), ('Parcare acoperită', 'Parcare acoperită'), ('Parcare deschisă', 'Parcare deschisă')], null=True, verbose_name='Parcare')),
                ('heating_system', models.CharField(blank=True, choices=[('Calorifere', 'Calorifere'), ('Centrală cu lemne', 'Centrală cu lemne'), ('Centrală cu peleți', 'Centrală cu peleți'), ('Centrală imobil', 'Centrală imobil'), ('Centrală proprie', 'Centrală proprie'), ('Încălzire diesel', 'Încălzire diesel'), ('Încălzire în pardoseală', 'Încălzire în pardoseală'), ('Pompă de căldură', 'Pompă de căldură'), ('Sobă / Teracotă', 'Sobă / Teracotă'), ('Termoficare', 'Termoficare'), ('Ventiloconvectoare', 'Ventiloconvectoare')], null=True, verbose_name='Sistem încălzire')),
                ('entrance_door', models.CharField(blank=True, choices=[('Ușă intrare lemn', 'Ușă intrare lemn'), ('Ușă intrare metal', 'Ușă intrare metal'), ('Ușă intrare pal', 'Ușă intrare pal'), ('Ușă intrare PVC', 'Ușă intrare PVC')], null=True, verbose_name='Ușă intrare')),
                ('interior_doors', models.CharField(blank=True, choices=[('Uși interior celulare', 'Uși interior celulare'), ('Uși interior lemn', 'Uși interior lemn'), ('Uși interior MDF', 'Uși interior MDF'), ('Uși interior cu panel', 'Uși interior cu panel'), ('Uși interior PVC', 'Uși interior PVC'), ('Uși interior sticlă', 'Uși interior sticlă')], null=True, verbose_name='Uși interior')),
                ('furniture', models.CharField(blank=True, choices=[('Mobilat complet', 'Mobilat complet'), ('Mobilat lux', 'Mobilat lux'), ('Mobilat parțial', 'Mobilat parțial'), ('Nemobilat', 'Nemobilat')], null=True, verbose_name='Mobilier')),
                ('kitchen', models.CharField(blank=True, choices=[('Bucătărie deschisă', 'Bucătărie deschisă'), ('Bucătărie închisă', 'Bucătărie închisă'), ('Bucătărie mobilată', 'Bucătărie mobilată'), ('Bucătărie parțial mobilată', 'Bucătărie parțial mobilată'), ('Bucătărie parțial utilată', 'Bucătărie parțial utilată'), ('Bucătărie utilată', 'Bucătărie utilată'), ('Chicinetă', 'Chicinetă')], null=True, verbose_name='Bucătărie')),
                ('windows', models.CharField(blank=True, choices=[('Ferestre aluminiu', 'Ferestre aluminiu'), ('Ferestre lemn', 'Ferestre lemn'), ('Ferestre PVC', 'Ferestre PVC'), ('Geamuri cu izolație fonică', 'Geamuri cu izolație fonică'), ('Geamuri cu protecție UV', 'Geamuri cu protecție UV'), ('Geamuri termopan', 'Geamuri termopan'), ('Geamuri tripan', 'Geamuri tripan')], null=True, verbose_name='Ferestre')),
                ('other_spaces', models.CharField(blank=True, choices=[('Grădină proprie', 'Grădină proprie'), ('Boxă la subsol', 'Boxă la subsol'), ('Curte', 'Curte'), ('Curte comună', 'Curte comună'), ('Debara', 'Debara'), ('Lift', 'Lift'), ('Loc de joacă copii', 'Loc de joacă copii'), ('Magazie', 'Magazie'), ('Pivniță', 'Pivniță'), ('Zonă barbeque', 'Zonă barbeque')], null=True, verbose_name='Alte spații')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_apartment_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
                ('residential_ensemble', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.residentialensemble', verbose_name='Ansamblu rezidențial')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Terrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Activă', 'Activă'), ('Incompletă', 'Incompletă'), ('Retrasă', 'Retrasă'), ('Pierdută', 'Pierdută')], default='Incompletă', verbose_name='Status proprietate⋆')),
                ('property_type', models.CharField(choices=[('apartment', 'Apartament'), ('house', 'Casă'), ('terrain', 'Teren'), ('commercial_space', 'Spațiu comercial'), ('office_space', 'Spațiu de birouri'), ('industrial_space', 'Spațiu industrial')], default='apartment', verbose_name='Tip proprietate⋆')),
                ('transaction_type', models.CharField(choices=[('Vânzare', 'Vânzare'), ('Închiriere', 'Închiriere')], verbose_name='Tip tranzacție⋆')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descriere')),
                ('county', models.CharField(choices=[('Alba', 'Alba'), ('Argeș', 'Argeș'), ('Arad', 'Arad'), ('București', 'București'), ('Bacău', 'Bacău'), ('Bihor', 'Bihor'), ('Bistrița-Năsăud', 'Bistrița-Năsăud'), ('Brăila', 'Brăila'), ('Botoșani', 'Botoșani'), ('Brașov', 'Brașov'), ('Buzău', 'Buzău'), ('Cluj', 'Cluj'), ('Călărași', 'Călărași'), ('Caraș-Severin', 'Caraș-Severin'), ('Constanța', 'Constanța'), ('Covasna', 'Covasna'), ('Dâmbovița', 'Dâmbovița'), ('Dolj', 'Dolj'), ('Gorj', 'Gorj'), ('Galați', 'Galați'), ('Giurgiu', 'Giurgiu'), ('Hunedoara', 'Hunedoara'), ('Harghita', 'Harghita'), ('Ilfov', 'Ilfov'), ('Ialomița', 'Ialomița'), ('Iași', 'Iași'), ('Mehedinți', 'Mehedinți'), ('Maramureș', 'Maramureș'), ('Mureș', 'Mureș'), ('Neamț', 'Neamț'), ('Olt', 'Olt'), ('Prahova', 'Prahova'), ('Sibiu', 'Sibiu'), ('Sălaj', 'Sălaj'), ('Satu-Mare', 'Satu-Mare'), ('Suceava', 'Suceava'), ('Tulcea', 'Tulcea'), ('Timiș', 'Timiș'), ('Teleorman', 'Teleorman'), ('Vâlcea', 'Vâlcea'), ('Vrancea', 'Vrancea'), ('Vaslui', 'Vaslui')], verbose_name='Județ⋆')),
                ('city', models.CharField(max_length=30, verbose_name='Localitate⋆')),
                ('zone', models.CharField(max_length=20, verbose_name='Zonă⋆')),
                ('street_address', models.CharField(max_length=40, verbose_name='Stradă⋆')),
                ('street_nr', models.IntegerField(verbose_name='Număr stradă⋆')),
                ('images', models.ImageField(blank=True, null=True, upload_to='static/images/listings/', verbose_name='Imagini')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit ipotecar', 'Credit ipotecar'), ('Credit Prima Casă', 'Credit Prima Casă'), ('Rate la dezvoltator', 'Rate la dezvoltator')], null=True, verbose_name='Modalitate plată acceptată')),
                ('other_details', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Alte detalii')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data adăugării')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data ultimei actualizări')),
                ('terrain_type', models.CharField(choices=[('Construcții', 'Construcții'), ('Agricol', 'Agricol'), ('Pădure', 'Pădure')], verbose_name='Tip teren⋆')),
                ('destination', models.CharField(blank=True, choices=[('Rezidențială', 'Rezidențială'), ('Comercială', 'Comercială'), ('Industrială', 'Industrială'), ('Agricolă', 'Agricolă'), ('Horeca / Retail', 'Horeca / Retail'), ('Spital / Clinică', 'Spital / Clinică'), ('Benzinărie', 'Benzinărie'), ('Spălătorie auto', 'Spălătorie auto'), ('De vacanță', 'De vacanță')], null=True, verbose_name='Destinație')),
                ('classification', models.CharField(choices=[('Intravilan', 'Intravilan'), ('Extravilan', 'Extravilan')], verbose_name='Clasificare⋆')),
                ('terrain_surface', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Suprafață teren⋆')),
                ('unit', models.CharField(choices=[('mp', 'mp'), ('ar', 'ar'), ('ha', 'ha')], verbose_name='Unitate suprafață⋆')),
                ('street_front', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Front stradal (m)')),
                ('nr_street_fronts', models.IntegerField(blank=True, null=True, verbose_name='Număr fronturi stradale')),
                ('opening_to', models.CharField(blank=True, choices=[('Șosea', 'Șosea'), ('Drum principal', 'Drum principal'), ('DN', 'DN'), ('Autostradă', 'Autostradă'), ('Șoseaua de centură', 'Șoseaua de centură'), ('Lac', 'Lac'), ('Pădure', 'Pădure'), ('Drum de servitute', 'Drum de servitute')], null=True, verbose_name='Deschidere la')),
                ('fusion_degree', models.IntegerField(blank=True, null=True, verbose_name='Grad de comasare (%)')),
                ('inclination', models.IntegerField(blank=True, null=True, verbose_name='Înclinație (°)')),
                ('incidence_value', models.IntegerField(blank=True, null=True, verbose_name='Valoare incidență')),
                ('construction', models.BooleanField(default=False, verbose_name='Construcție pe teren')),
                ('construction_surface', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Suprafață construcție (mp)')),
                ('access_road_width', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Lățime drum acces (m)')),
                ('pot', models.CharField(blank=True, max_length=4, null=True, verbose_name='POT (%)')),
                ('cut', models.CharField(blank=True, max_length=5, null=True, verbose_name='CUT')),
                ('building_permit', models.BooleanField(default=False, verbose_name='Autorizație de construcție')),
                ('pug', models.BooleanField(default=False, verbose_name='PUG')),
                ('puz', models.BooleanField(default=False, verbose_name='PUZ')),
                ('pud', models.BooleanField(default=False, verbose_name='PUD')),
                ('urban_certificate', models.BooleanField(default=False, verbose_name='Certificat de urbanism')),
                ('maximum_nr_levels', models.IntegerField(blank=True, null=True, verbose_name='Număr maxim niveluri')),
                ('land_facilities', models.CharField(blank=True, choices=[('Apă', 'Apă'), ('Canalizare', 'Canalizare'), ('Curent', 'Curent'), ('Gaz', 'Gaz'), ('Irigații', 'Irigații'), ('Utilități în zonă', 'Utilități în zonă')], null=True, verbose_name='Facilități teren')),
                ('other_features', models.CharField(blank=True, choices=[('Acces auto', 'Acces auto'), ('Construcție demolabilă', 'Construcție demolabilă'), ('La șosea', 'La șosea'), ('Oportunitate de investiții', 'Oportunitate de investiții'), ('Parcelabil', 'Parcelabil'), ('Studiu Geo', 'Studiu Geo'), ('Teren împrejmuit', 'Teren împrejmuit')], null=True, verbose_name='Alte facilități')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Preț tranzacționare⋆')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Ultimul preț în mână')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negociabil')),
                ('price_per_sqm', models.DecimalField(decimal_places=2, editable=False, max_digits=7, verbose_name='Preț / mp')),
                ('owner_type', models.CharField(blank=True, choices=[('Persoană fizică', 'Persoană fizică'), ('Persoană juridică', 'Persoană juridică')], null=True, verbose_name='Tip proprietar')),
                ('VAT_rate', models.CharField(blank=True, choices=[('Nu se aplică TVA', 'Nu se aplică TVA'), ('TVA inclus', 'TVA inclus'), ('+ 9% TVA', '+ 9% TVA'), ('+ 19% TVA', '+ 19% TVA')], default='Nu se aplică TVA', null=True, verbose_name='TVA')),
                ('currency', models.CharField(blank=True, choices=[('euro', '€'), ('lei', 'RON')], default='euro', null=True, verbose_name='Monedă')),
                ('percentage_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision de la proprietar (%)')),
                ('fixed_commission', models.IntegerField(blank=True, null=True, verbose_name='Comision fix de la proprietar')),
                ('exclusive_representation', models.BooleanField(default=False, verbose_name='Reprezentare exclusivă')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_terrain_list', to=settings.AUTH_USER_MODEL, verbose_name='Agent asociat')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact', verbose_name='Contact asociat')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
